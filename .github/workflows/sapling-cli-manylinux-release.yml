name: Release - Linux (x64, arm64)
'on':
  workflow_dispatch: null
  push:
    branches:
    - ci*
    tags:
    - v*
    - test-release-*
jobs:
  build:
    strategy:
      matrix:
        include:
          - runs-on: ubuntu-latest
            arch: x64
          - runs-on: ubuntu-24.04-arm
            arch: arm64
    runs-on: ${{ matrix.runs-on }}
    container:
      image: ${{ format('ghcr.io/{0}/manylinux_2_34_{1}:latest', github.repository, matrix.arch) }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    - name: Grant Access
      run: git config --global --add safe.directory "$PWD"
    - name: Set SAPLING_VERSION
      shell: bash
      run: echo "SAPLING_VERSION=$(ci/tag-name.sh)" >> $GITHUB_ENV
    - name: Build
      working-directory: ./eden/scm
      run: ${{ format('VERSION={0} python3 ./packaging/manylinux/build.py', env.SAPLING_VERSION) }}
    - name: Rename .tar.xz
      working-directory: ./eden/scm
      run: ${{ format('mv sapling-manylinux.tar.xz sapling-{0}-linux-{1}.tar.xz', env.SAPLING_VERSION, matrix.arch) }}
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-${{ matrix.arch }}-tarball
        path: ./eden/scm/sapling*.tar.xz
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Grant Access
      run: git config --global --add safe.directory "$PWD"
    - name: Download Artifacts
      uses: actions/download-artifact@v4.1.7
      with:
        pattern: sapling*.tar.xz
    - name: Create pre-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: bash
      run: bash ci/retry.sh bash ci/create-release.sh $(ci/tag-name.sh)
    - name: Upload Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: bash
      run: bash ci/retry.sh gh release upload --clobber $(ci/tag-name.sh) sapling*.tar.xz
